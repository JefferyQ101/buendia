#!/bin/bash

# Copyright 2015 The Project Buendia Authors
#
# Licensed under the Apache License, Version 2.0 (the "License"); you may not
# use this file except in compliance with the License.  You may obtain a copy
# of the License at: http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software distrib-
# uted under the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES
# OR CONDITIONS OF ANY KIND, either express or implied.  See the License for
# specific language governing permissions and limitations under the License.

set -e
cd $(dirname $0)
firmware=$1
tmpdir=/tmp/edison-firmware.$$

if [ ! -n "$firmware" ]; then
  echo "Usage: $0 <firmware-image.{zip|tar|tar.gz}>"
  echo
  echo "Installs a firmware image on an Edison, over USB."
  exit 1
fi

if [ $(id -u) != "0" ]; then
  echo "Must be run as root."
  exit 1
fi

if [[ $firmware != *.zip && $firmware != *.tar.gz && $firmware != *.tgz ]]; then
  echo "$firmware should be a .zip, .tar.gz, or .tgz file."
  exit 1
fi

if [ ! -n $(which dfu-util) ]; then
  echo "dfu-util is required for installing firmware.  Please ensure it is"
  echo "installed and available on the $PATH."
  exit 1
fi

echo
echo "-------------------------------------------------------------------"
echo "Please unplug any Edisons from this computer now!"

# Unzipping takes a long time, so check if we've unzipped this file before.
hash=$((md5 $firmware || md5sum $firmware) 2>/dev/null | grep -o '[0-9a-f]\{32\}') || true
if [ -f /tmp/$hash/flashall.sh ]; then
  echo "-------------------------------------------------------------------"
  echo
  sleep 3
else
  echo
  echo "Unpacking (please wait, you'll need to plug in a cable after)..."
  echo "-------------------------------------------------------------------"
  echo
  rm -rf $tmpdir
  mkdir -p $tmpdir
  if [[ $firmware = *.zip ]]; then
    cp $firmware $tmpdir/firmware.zip
    cd $tmpdir
    unzip firmware.zip
  else
    cp $firmware $tmpdir/firmware.tar.gz
    cd $tmpdir
    tar xvfz firmware.tar.gz
  fi
  flashall=$(find $tmpdir -name 'flashall.sh')
  if [ ! -n "$flashall" ]; then
    echo "$firmware should contain a flashall.sh file."
    exit 1
  fi
  mv $(dirname $flashall) /tmp/$hash
  rm -rf $tmpdir
fi
cd /tmp/$hash

# Set OSTYPE to x so that flashall.sh doesn't try to install gnu-getopt.
OSTYPE=x

# flashall.sh uses readlink with the -f option, which isn't supported on Mac,
# but it only uses readlink to find the path of the current script.
function readlink() {
  echo $(pwd)/flashall.sh
}

echo
echo "--------------------------------------------------------------------"
echo "To proceed, connect a USB cable from this computer to the Edison's"
echo "micro-USB OTG port (the more rectangular of the two USB ports)."
echo
echo "After you do this, the process can continue unattended.  Take a nap!"
echo
echo "            ----------------           ----------------  "
echo "           |                |         (                ) "
echo "           |                |          \              /  "
echo "            ----------------             ------------    "
echo "              USB OTG port             regular USB port  "
echo
echo "The Edison will be ERASED.  The firmware update takes ~20 minutes"
echo "(even though you may see a message saying it will take 5 minutes)."
echo "--------------------------------------------------------------------"
echo
set +e
source flashall.sh

# The Edison has to reboot, run a script to partition and create the /home
# filesystem, and reboot again.  Unfortunately, we don't have a way to know
# when it has rebooted the second time, so we have to just wait.  It takes
# about 90 seconds for the Edison to boot, set up disk partitions, boot again,
# and produce a login prompt.  100 seconds should be pretty safe.
sleep 100
