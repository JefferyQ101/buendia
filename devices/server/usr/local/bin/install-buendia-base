#!/bin/ash

set -e
ROOT=/home/root/debian  # must be on the /home filesystem
PATH=/usr/local/bin:$PATH

echo -ne '\n---- install-buendia-base: '; date
if [ -f /etc/buendia-base-installed ]; then
  echo "Buendia base system is installed."
  exit 0
fi

# Make sure the Edison is able to connect to an externally managed wifi network.
systemctl enable wpa_supplicant_event  # enable DHCP client
systemctl disable hostapd  # don't be an access point
systemctl stop hostapd  # don't be an access point

# Turn on wifi, using the last saved configuration.
echo "Starting wifi."

if wifi -; ! ping -c 1 -w 1 debian.org; then
  if sleep 10; wifi -; ! ping -c 1 -w 1 debian.org; then
    if sleep 20; wifi -; ! ping -c 1 -w 1 debian.org; then
      echo 'Could not connect wifi.'
      exit 1
    fi
  fi
fi

# Wipe and install Debian under $ROOT using cdebootstrap.  If the installation
# fails (most likely due to network unavailability), reboot and try again.
install-debian || reboot

# Everything after this point is designed to be idempotent so that this script
# can run safely without a site ID on every boot until a site ID is selected.

# Copy root's password entry into Debian.
grep '^root:' /etc/shadow > $ROOT/etc/shadow.new
grep -v '^root:' $ROOT/etc/shadow >> $ROOT/etc/shadow.new
cat $ROOT/etc/shadow.new > $ROOT/etc/shadow

# Copy root's SSH authorizations into Debian.
cp -pr ~root/.ssh $ROOT/root/

# Install a .bashrc file for root in the Debian chroot.
cat <<'EOF' >$ROOT/root/.bashrc
PATH=/usr/local/bin:$PATH
PS1='\[\033[33m\]\h(debian)[\!]\$\[\033[0m\] '
export LS_OPTIONS='--color=auto'
alias ls='ls $LS_OPTIONS'
alias ll='ls -l $LS_OPTIONS'
EOF

# Copy configuration settings into /etc.
for i in fstab host.conf localtime nsswitch.conf resolv.conf timezone; do
  cp -p /etc/$i $ROOT/etc || true
done

# Turn off the default Edison web server on port 80.
systemctl disable edison_config

# Add custom package repositories (no need to quit if this file is missing).
cp -f /etc/buendia-base.sources.list $ROOT/etc/apt/sources.list.d/buendia-base.list || true

# Make the site ID available within Debian.
mkdir -p $ROOT/usr/share/buendia/site
cp -f /etc/buendia-site-id $ROOT/usr/share/buendia/site/id || true

# Do the rest of the setup steps below within Debian.
init-debian
cat <<'EOF' | enter-debian
set -e

# Set time zone to UTC.
echo UTC > /etc/timezone
dpkg-reconfigure -f noninteractive tzdata

# Configure apt not to install extra packages we don't need.
echo 'APT::Install-Recommends "0";' > /etc/apt/apt.conf.d/99norecommend
echo 'APT::Install-Suggests "0";' >> /etc/apt/apt.conf.d/99norecommend

# Configure apt to keep package backups forever, except for a disk space limit.
echo 'APT::Archives::MaxAge "0";' > /etc/apt/apt.conf.d/99noautoclean
echo 'APT::Archives::MinAge "0";' > /etc/apt/apt.conf.d/99noautoclean
echo 'APT::Archives::MaxSize "100";' > /etc/apt/apt.conf.d/99noautoclean

# All the non-Buendia packages that are considered part of the base system.
# These won't be included in backups of the software installation state.
BASE_PACKAGES='coreutils less curl netcat zip unzip git screen ssh vim strace rsync python2.7 python-pip openjdk-7-jdk gcc libc-dev apt-utils nginx mysql-server tomcat7 tomcat7-admin'

# The first time we run apt-get, ignore failure; install as much as possible.
apt-get update || true
# Explicitly state to apt that no interaction is possible.
export DEBIAN_FRONTEND=noninteractive
apt-get -y install $BASE_PACKAGES

# Save the state of the base package installation for future comparison.
dpkg-query -W --showformat '${Package}=${Version}\n' | sort > /etc/base.packages.list

# Delete the cached backups of the base packages, to save space.
for package in $(cat /etc/base.packages.list); do
    package=$(echo $package | sed -e 's/=/_/g; s/:/%3a/g')
    rm -f /var/cache/apt/archives/${package}*.deb
done

# Try apt-get update again; this time, fail if apt-get fails.
apt-get update

# Install the essential tool that installs all other Buendia packages.
apt-get -y --allow-unauthenticated install buendia-pkgclient

. /usr/share/buendia/site/id || true
if [ -n "$SITE_ID" ]; then
  apt-get -y --allow-unauthenticated install buendia-site-$SITE_ID
  echo "Buendia site ID configured: $SITE_ID"
else
  echo "Buendia site ID not selected."
  exit 1
fi

EOF

echo "Buendia base system successfully installed, rebooting."
echo
touch /etc/buendia-base-installed
sleep 5
reboot  # will run buendia-pkgclient-update on boot and do first install
