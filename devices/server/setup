#!/bin/bash

set -e
cd $(dirname $0)
source remote-execution.sh
password=$1
setup_ssid_psk=$2
site_id=$3
repo_url=http://packages.projectbuendia.org:9001

if [ "$1" == "-h" -o ! -n "$setup_ssid_psk" ]; then
  echo "Usage: $0 <new-root-password> <setup-ssid>[:<psk-password>] [<site-id>]"
  echo
  echo "Completely erases an Edison and brings it to a basic state enabling"
  echo "all further installation and configuration to be done by .deb packages:"
  echo
  echo "  - Flashed with Edison firmware image (Yocto Linux)"
  echo "  - Root password set"
  echo "  - Debian GNU/Linux 7 (within a /home/root/debian chroot inside Yocto)"
  echo "  - Yocto configured to execute Debian startup scripts on startup"
  echo
  echo "<setup-ssid> should be a network with Internet access that the Edison"
  echo "will use during this setup process to download and install software."
  echo "It can be a wifi network with no password or with a PSK password."
  echo
  echo "If <site-id> is specified, there should be an available package named"
  echo "buendia-site-<site-id>."
  exit 1
fi

TOOLS=../../tools
start=$(date)

# Get sudo access before possibly initiating a long download.
sudo echo $start

# Flash the Edison with a firmware file from the Intel site.
$TOOLS/fetch http://downloadmirror.intel.com/24389/eng/edison-image-rel1-maint-rel1-ww42-14.zip 9a7509341cbf936c662af3e46f1b0f34 /tmp/edison-firmware.zip
sudo ./replace-firmware /tmp/edison-firmware.zip
flashed=$(date)
echo $flashed

# Set up the root password.
./configure-root-access "$password"

# Set the clock to something approximately correct.
date=$(date '+%Y-%m-%d %H:%M:%S')
cat <<EOF | do_in_yocto
date -s '$date'
touch /var/lib/systemd/clock
EOF

# Leave the site ID where usr/local/bin/install-buendia-base will find it.
[ -n "$site_id" ] && cat <<EOF | do_in_yocto
echo "SITE_ID=$site_id" > /etc/buendia-site-id
EOF

# Leave the repo URL where usr/local/bin/install-buendia-base will find it.
[ -n "$repo_url" ] && cat <<EOF | do_in_yocto
echo deb [arch=all] '$repo_url' stable main > /etc/buendia-base.sources.list
EOF

# Copy all the setup files and scripts onto the Edison.
cat <<EOF | do_in_yocto
tar cf /var/backups/systemd.tar /etc/systemd /lib/systemd/system
EOF
tar cf - etc lib usr | $ssh $target 'tar xf - -C /'

# Ensure that the Edison can connect to the setup network.  The configuration
# will be saved and reused when wifi is turned on again in the future.
cat <<EOF | do_in_yocto
/usr/local/bin/wifi '$setup_ssid_psk'
EOF

# Reboot to continue installation.
echo '(sync; reboot) &' | do_in_yocto
reboot=$(date)

echo
echo "$start - started"
echo "$flashed - finished writing firmware"
echo "$reboot - rebooting to continue installation"
echo
echo "It is safe to disconnect the Edison from this machine now."
echo
echo "When the Edison next boots up, or if it remains connected to power now,"
echo "it will proceed to install Debian and set up the Buendia base system."
