#!/bin/ash

set -e
ROOT=/home/root/debian  # must be on the /home filesystem
PATH=/usr/local/bin:$PATH

# All the non-Buendia packages that are considered part of the base system.
# These won't be included in backups of the software installation state.
# This list should contain any essential tools and diagnostic utilities that
# will aid troubleshooting, and any especially large packages that are needed
# by the application and safe to omit from backups.
BASE_PACKAGES='coreutils less curl netcat dnsutils zip unzip git screen ssh vim strace rsync python2.7 python-pip openjdk-7-jdk gcc libc-dev apt-utils nginx mysql-server tomcat7 tomcat7-admin'

echo -ne '\n---- install-buendia-base: '; date
if [ -f /etc/buendia-base-installed ]; then
    echo "Buendia base system is installed."
    exit 0
fi

# Make sure the Edison is able to connect to an externally managed wifi network.
systemctl enable wpa_supplicant_event  # enable DHCP client
systemctl disable hostapd  # don't be an access point
systemctl stop hostapd  # don't be an access point

# Turn on wifi, using the last saved configuration.
echo "Starting wifi."

if wifi -; ! ping -c 1 -w 1 debian.org; then
    if sleep 10; wifi -; ! ping -c 1 -w 1 debian.org; then
        if sleep 20; wifi -; ! ping -c 1 -w 1 debian.org; then
            echo 'Could not connect wifi.'
            exit 1
        fi
    fi
fi

# Wipe and install Debian under $ROOT using cdebootstrap.  If the installation
# fails (most likely due to network unavailability), reboot and try again.
install-debian || reboot

# Everything after this point is designed to be idempotent so that this script
# can run safely without a site ID on every boot until a site ID is selected.

# Unpack setup files into the Debian system.
tar xf /etc/debian.tar -C /debian

# Copy root's password entry and SSH authorizations into Debian.
grep '^root:' /etc/shadow > $ROOT/etc/shadow.new
grep -v '^root:' $ROOT/etc/shadow >> $ROOT/etc/shadow.new
cat $ROOT/etc/shadow.new > $ROOT/etc/shadow
cp -pr ~root/.ssh $ROOT/root/

# Copy configuration settings into /etc.
for i in fstab host.conf localtime nsswitch.conf resolv.conf; do
    cp -p /etc/$i $ROOT/etc || true
done

# Turn off the default Edison web server on port 80.
systemctl disable edison_config

# Do the rest of the setup steps below within Debian.
init-debian
cat <<'EOF' | enter-debian
set -e

# Set up the time zone.
dpkg-reconfigure -f noninteractive tzdata

# Proceed without prompting for user input during package installation.
export DEBIAN_FRONTEND=noninteractive

# Tidy up in case there was a previous interrupted installation attempt.
dpkg --configure -a || true
apt-get -y -f install || true

# The first time we run apt-get, ignore failure; install as much as possible.
apt-get update || true

# Install all the base packages.
apt-get -y install $BASE_PACKAGES

# Save the state of the base package installation for future reference.
dpkg-query -W --showformat '${Package}=${Version}\n' | sort > /etc/base.packages.list

# Delete the cached .deb files for the base packages, to save space.
for package in $(cat /etc/base.packages.list); do
    package=$(echo $package | sed -e 's/=/_/g; s/:/%3a/g')
    rm -f /var/cache/apt/archives/${package}*.deb
done

# Try apt-get update again; this time, fail if apt-get fails.
apt-get update

# Install the essential tool that installs all other Buendia packages.
apt-get -y --allow-unauthenticated install buendia-pkgclient

# If a site has been selected, install the site settings package.
. /usr/share/buendia/site/id || true
if [ -n "$SITE_ID" ]; then
    apt-get -y --allow-unauthenticated install buendia-site-$SITE_ID
    echo "Buendia site ID configured: $SITE_ID"
else
    echo "Buendia site ID not selected."
    exit 1
fi

EOF

echo "Buendia base system successfully installed, rebooting."
echo
touch /etc/buendia-base-installed
sleep 10
reboot    # will run buendia-update on boot and do first install
