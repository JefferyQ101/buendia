#!/bin/bash

set -e; . /usr/share/buendia/utils.sh
export MYSQL_USER=$OPENMRS_MYSQL_USER
export MYSQL_PASSWORD=$OPENMRS_MYSQL_PASSWORD
root=$1
limit=$2

if [ "$limit" = "" -o "$1" = "-h" ]; then
    echo "Usage: $0 <backup-root-path> <kilobytes>"
    echo
    echo "Backs up the current OpenMRS database and set of Buendia packages"
    echo "to a directory under the specified path, capturing at most one backup"
    echo "per day and replacing any backup made earlier this same day."
    echo "Cleans up the backup directory to keep its total space usage less"
    echo "than the specified number of kilobytes."
    exit 1
fi

# Keep one backup per day.  (To ensure that there is always a backup that is
# much less than a day old, run buendia-backup multiple times per day.)
final_dir=$root/$(date +'%Y-%m-%d')
dir=$final_dir.new
old_dir=$root/old

# We'll write files to $dir, and when done, atomically move $dir to $final_dir.
echo "Backing up to $final_dir..."
rm -rf $dir
mkdir -p $dir

# Record the time that the backup started.  Since buendia-limit removes
# the oldest files first, the presence of this file means that none of the
# contents have been removed by buendia-limit.
touch $dir/start
sleep 1

# Keep all the .deb files in one common directory for all the backups.
deb_dir=$root/packages
mkdir -p $deb_dir

# ---- Back up MySQL data

echo "Dumping MySQL database..."
tmp=/tmp/buendia-mysql-dump.$$
trap 'rm -f $tmp' EXIT
if ! buendia-mysql-dump openmrs $dir/openmrs.zip >$tmp 2>&1; then
    cat $tmp
    echo "buendia-mysql-dump failed!"
    exit 1
fi
ls -l $dir/openmrs.zip

# ---- Back up the package list and non-base packages

# Examine what packages are installed.
dpkg-query -W --showformat '${Package}=${Version}\n' | sort > $dir/all.list
comm -2 -3 $dir/all.list /etc/base.packages.list | sort > $dir/buendia.list
echo Backing up $(cat $dir/buendia.list | wc -l) packages...

for package in $(cat $dir/buendia.list); do
    package=$(echo $package | tr = _ | sed -e 's/:/%3a/g')
    cp -p /var/cache/apt/archives/$package*.deb $deb_dir
done

# ---- Move the resulting backup directory to its proper place.

touch $dir/finish
if [ -e $final_dir ]; then
    # There was an older backup today; move it out of the way.
    rm -rf $old_dir
    mv $final_dir $old_dir
fi
mv $dir $final_dir
echo Done.
du $final_dir

rm -rf $old_dir

# ---- Limit the total size of backups

buendia-limit $limit $root

# ---- Remove any backup directories that were partially removed

for dir in $root/*; do
    if [ -d $dir -a ! -e $dir/start ]; then
        rm -rf $dir
    fi
done
