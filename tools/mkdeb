#!/bin/bash

output="$1"; shift
control="$1"; shift
root="$1"; shift

if [ "$control" == "" ]; then
    cat <<EOF
Usage: $0 <output.deb> <control-dir> <root-path>

Builds a Debian package at the specified output path, given the files
to install arranged under the <root-path> and the control files in
<control-dir>.

bash-style parameter expansion, command substitution, arithmetic expansion
are performed on all the control files.  These are all the expansions
triggered by the "\$" character: \$VAR and \${VAR} expand to environment
variables, \$(command) expands to the output of a shell command, and
\$((expression)) evaluates an arithmetic expression.

EOF
    exit 1
fi

set -e
pwd="$(pwd)"
tmp=/tmp/make_package.$$

# Apply bash expansion to each control file.
mkdir -p $tmp/control

if [ -f $control ]; then
    cat <(echo 'cat <<MKDEB_EOF') $control <(echo 'MKDEB_EOF') \
        | bash > $tmp/control/control
else
    for file in $control/*; do
        cat <(echo 'cat <<MKDEB_EOF') $file <(echo 'MKDEB_EOF') \
            | bash > $tmp/control/$(basename $file)
    done
fi

# Pack up the Debian package.
tar cvfz $tmp/control.tar.gz -C $tmp/control .
tar cvfz $tmp/data.tar.gz -C $root .
echo 2.0 > $tmp/debian-binary
ar -r $output $tmp/debian-binary $tmp/control.tar.gz $tmp/data.tar.gz
