#!/bin/bash

set -e
if [ "$1" == "-r" ]; then
    retry=yes
    shift
fi
hostport=$1

if [ "$1" == "-h" -o "$hostport" == "" ]; then
    echo "Usage: $0 [-r] <host>[:<port>]"
    echo
    echo "Makes requests to confirm that the Buendia API is available at the"
    echo "given host.  If -r is specified, keeps retrying until the server"
    echo "responds properly, for up to 15 minutes."
    exit 1
fi

tmpout=/tmp/warmup.out.$$
tmpgrep=/tmp/warmup.grep.$$
#trap 'rm -rf $tmpout $tmpgrep' EXIT

# These are just defaults.
if [ -z "$SERVER_OPENMRS_USER" ]; then
    SERVER_OPENMRS_USER=android
fi
if [ -z "$SERVER_OPENMRS_PASSWORD" ]; then
    SERVER_OPENMRS_PASSWORD=Android123
fi

# If we are warming up the local server, use its username and password.
if [[ $hostport = localhost || $hostport = localhost:* ]]; then
    for f in /usr/share/buendia/site/*; do . $f || true; done
fi

if [[ $hostport != *:* ]]; then
    hostport=$hostport:9000
fi

echo "=== $(date): $0"
if [ -n "$retry" ]; then
    echo "Contacting Buendia API at $hostport (can take about 5 minutes)..."
else
    echo "Contacting Buendia API at $hostport (trying just once)..."
fi

function check_url() {
    retry_count=0
    search="$1"
    shift
    while [[ $retry_count -lt 30 ]]; do
        echo
        echo "Trying $1..."
        curl -s -S -m 5 -i -L $@ 3>&1 1>$tmpout 2>&3 | grep . || true
        if [ -s $tmpout ]; then
            if grep -o "$search" $tmpout > $tmpgrep; then
                echo -n "Got a valid response containing: "
                head -1 $tmpgrep
                return 0
            fi
            echo "Got a response, but it did not contain /$search/."
            # Truncate the output to a maximum of 70 columns and 5 rows.
            sed -n -e '1,5 s/\(......................................................................\).*/\1.../' -e '1,5 s/^/> / p' -e '6 s/.*/[...]/ p' < $tmpout
        else
            echo "No response from server."
        fi

        if [ -e /dev/ttyMFD1 ]; then
            # Turn off green LED on failure.
            (stty 115200; echo -e "JFFLG0\r\n") </dev/ttyMFD1 >/dev/ttyMFD1
        fi

        if [ -z "$retry" ]; then
            false
        fi
        let retry_count=retry_count+1
        sleep 5
    done
    echo "Giving up after $retry_count tries."
    false
}

# Tomcat
check_url 'HTTP.*200 OK' http://$hostport/

# OpenMRS
check_url '<title>.*OpenMRS' http://$hostport/openmrs

# Buendia
check_url '{"results":' http://$hostport/openmrs/ws/rest/v1/projectbuendia/user -u $SERVER_OPENMRS_USER:$SERVER_OPENMRS_PASSWORD

echo
echo -e "    \x1b[32m\o/\x1b[0m  Success!  Buendia API at $hostport is up."
echo

if [ -e /dev/ttyMFD1 ]; then
    # Turn on green LED on success.
    (stty 115200; echo -e "JFFLG1\r\n") </dev/ttyMFD1 >/dev/ttyMFD1
fi
