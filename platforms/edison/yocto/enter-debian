#!/bin/ash

# Enters the /debian chroot environment and executes the specified command.

set -e
ROOT=/home/root/debian

# Make devices and other special filesystems appear where they should.
for dir in dev proc sys; do
  (mount | grep -q $ROOT/$dir) || mount --bind /$dir $ROOT/$dir
done

# Explicitly mount the devpts filesystem rather than binding to /dev/pts.
# /dev/pts is not always mounted when this script runs, e.g. on boot.
if ! (mount | grep -q $ROOT/dev/pts); then
  (mount | grep -q $ROOT/dev/pts) || mount -t devpts devpts $ROOT/dev/pts
fi

# Copy current configuration information into /etc.
for i in fstab host.conf hosts localtime nsswitch.conf resolv.conf timezone; do
  cp -p /etc/$i $ROOT/etc || true
done

# Make /etc/mtab appear as it should.
ln -sf /proc/mounts $ROOT/etc/mtab

# In Yocto root's home directory is /home/root, but in Debian root's
# home directory is /root, so we have to update $HOME.
export HOME=/root

# We have to quote each of the arguments individually to construct the
# bash command that runs within the chroot environment.  (Note that
# this won't work if any of the arguments contain a literal single-quote.)
cmd=''
while [ -n "$1" ]; do
  cmd="$cmd '$1'"
  shift
done
if [ -z "$cmd" ]; then
  cmd=/bin/bash
fi
chroot $ROOT /bin/bash -c "cd $HOME; $cmd"
