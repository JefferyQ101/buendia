#!/bin/bash

set -e
cd $(dirname $0)
source remote-execution.sh
warfile=$1
root_password=$2
new_password=$2

if [ "$1" == "-h" -o ! -n "$new_password" ]; then
  echo "Usage: $0 <openmrs.war> <mysql-root-password> <new-mysql-user-password>"
  echo
  echo "Installs OpenMRS on an Edison that already has Tomcat installed."
  exit 1
fi

echo
echo "Installing OpenMRS..."
echo

# Prevent hot deployment from exploding an incomplete WAR by ensuring Tomcat is down
# before copying WAR file.
echo "systemctl stop tomcat7" | do_in_yocto
$scp $warfile $target:/debian/var/lib/tomcat7/webapps/openmrs.war
echo "systemctl start tomcat7" | do_in_yocto

# Construct the openmrs-runtime.properties file.
cat <<EOF >/tmp/properties
encryption.key=$(dd if=/dev/urandom bs=16 count=1 | base64 | sed -e 's/=/\\=/g')
encryption.vector=$(dd if=/dev/urandom bs=16 count=1 | base64 | sed -e 's/=/\\=/g')

connection.url=jdbc\:mysql\://localhost\:3306/openmrs?autoReconnect\=true&sessionVariables\=storage_engine\=InnoDB&useUnicode\=true&characterEncoding\=UTF-8
connection.username=openmrs_user
connection.password=$new_password

auto_update_database=true
module.allow_web_admin=true
EOF

$scp /tmp/properties $target:/debian/tmp

# Install the properties file and create the openmrs_user MySQL user.
cat <<EOF | do_in_debian
mkdir -p /usr/share/tomcat7/.OpenMRS/modules
mv /tmp/properties /usr/share/tomcat7/.OpenMRS/openmrs-runtime.properties
chown -R tomcat7:root /usr/share/tomcat7/.OpenMRS

service mysql start

cat <<SQL | mysql -uroot -p"$root_password"
grant all on openmrs.* to openmrs_user@localhost identified by '$new_password';
SQL
EOF
